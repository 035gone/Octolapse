<!--
##################################################################################
# Octolapse - A plugin for OctoPrint used for making stabilized timelapse videos.
# Copyright (C) 2017  Brad Hochgesang
##################################################################################
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see the following:
# https://github.com/FormerLurker/Octolapse/blob/master/LICENSE
#
# You can contact the author either through the git-hub repository, or at the
# following email address: FormerLurker@pm.me
##################################################################################
-->
<script type="text/html" id="position-state-status-template">
    <div class="panel panel-default">
        <div class="panel-heading ol-heading">
            <div class="row-fluid">
                <span class="span6">
                    <h4>
                        Printer State
                    </h4>
                </span>
                <span class="span3">
                    Layer: <span data-bind="text:PrinterState.layer()" />
                </span>
                <span class="span3">
                    Height: <span data-bind="text:PrinterState.height()" /><i>&nbsp;mm</i>
                </span>
            </div>
        </div>
        <div class="panel-body text-center">
            <div class="row-fluid" data-bind="visible: PrinterState.hasPrinterStateErrors">
                <div class="span12 text-left">
                    <span>Waiting for initialization.  If errors remain on this panel after your first layer has printed, there might be a problem with your start gcode.  <a href="https://github.com/FormerLurker/Octolapse/wiki/Troubleshooting">See this troubleshooting page for details.</a></span>
                </div>

            </div>
            <div class="row-fluid">
                <div class="span6 octolapse-container">
                    <div class="margin-small">
                        <div class="row-fluid">
                            <div class="span4">
                                <div>X Homed</div>
                                <span class="fa-stack fa-2x" data-bind="attr: {title: PrinterState.getXHomedStateText}">
                                    <span class="fa fa-square fa-stack-2x"></span>
                                    <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PrinterState.getCheckedIconClass(PrinterState.x_homed(),'icon-ok-circle','icon-ban-circle','icon-ban-circle'),style: {color:PrinterState.getColor(PrinterState.x_homed(),'greenyellow','red','red')}"></span>
                                </span>
                            </div>
                            <div class="span4">
                                <div>Y Homed</div>
                                <span class="fa-stack fa-2x" data-bind="attr: {title: PrinterState.getYHomedStateText}">
                                    <span class="fa fa-square fa-stack-2x"></span>
                                    <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PrinterState.getCheckedIconClass(PrinterState.y_homed(),'icon-ok-circle','icon-ban-circle','icon-ban-circle'),style: {color:PrinterState.getColor(PrinterState.y_homed(),'greenyellow','red','red')}"></span>
                                </span>
                            </div>
                            <div class="span4">
                                <div>Z Homed</div>
                                <span class="fa-stack fa-2x" data-bind="attr: {title: PrinterState.getZHomedStateText}">
                                    <span class="fa fa-square fa-stack-2x"></span>
                                    <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PrinterState.getCheckedIconClass(PrinterState.z_homed(),'icon-ok-circle','icon-ban-circle','icon-ban-circle'),style: {color:PrinterState.getColor(PrinterState.z_homed(),'greenyellow','red','red')}"></span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="span2 octolapse-container" data-bind="visible: PrinterState.has_position_error()">
                    <div class="margin-small ">
                        <div>Errors</div>
                        <span class="fa-stack fa-2x" data-bind="attr: {title: PrinterState.getHasPositionErrorStateText}">
                            <span class="fa fa-square fa-stack-2x"></span>
                            <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PrinterState.getCheckedIconClass(PrinterState.has_position_error(),'icon-ok-circle','icon-circle-blank','icon-circle-blank'), style: {color:PrinterState.getColor(PrinterState.has_position_error(),'red','greenyellow','red')} "></span>
                        </span>
                    </div>
                </div>
                <div class="span4 octolapse-container" data-bind="visible:PrinterState.has_position_error">
                    <div class="margin-small">
                        <div>Error Messages</div>
                        <div class="text-error">
                            <span data-bind="text : PrinterState.position_error"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    <div class="row-fluid">
                        <div class="span2 octolapse-container">
                            <div class="margin-small">
                                <div>Extruder</div>
                                <div class="ol-text-status-1">
                                    <span data-bind="text:PrinterState.getExtruderModeText()"></span>
                                </div>
                                <span class="fa-stack fa-2x" data-bind="attr: {title: PrinterState.getIsExtruderRelativeStateText}">
                                    <span class="fa fa-square fa-stack-2x"></span>
                                    <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PrinterState.getCheckedIconClass( PrinterState.is_extruder_relative(),'icon-ok-circle','icon-ok-circle', 'fa-question'), style: {color:PrinterState.getColor(PrinterState.is_extruder_relative(),'greenyellow','greenyellow','red')}"></span>
                                </span>

                            </div>
                        </div>
                        <div class="span2 octolapse-container">
                            <div class="margin-small">
                                <div>XYZ</div>
                                <div class="ol-text-status-1">
                                    <span data-bind="text:PrinterState.getXYZModeText()"></span>
                                </div>
                                <span class="fa-stack fa-2x" data-bind="attr: {title: PrinterState.getIsRelativeStateText}">
                                    <span class="fa fa-square fa-stack-2x"></span>
                                    <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PrinterState.getCheckedIconClass(PrinterState.is_relative(),'icon-ok-circle','icon-ok-circle', 'fa-question'), style: {color:PrinterState.getColor(PrinterState.is_relative(),'greenyellow','greenyellow','red')}"></span>
                                </span>
                            </div>
                        </div>
                        <div class="span2 octolapse-container">
                            <div class="margin-small">
                                <div>
                                    <div>Metric</div>
                                    <div class="ol-text-status-1">
                                        Units
                                    </div>
                                    <span class="fa-stack fa-2x" data-bind="attr: {title: PrinterState.getis_metricStateText}">
                                        <span class="fa fa-square fa-stack-2x"></span>
                                        <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PrinterState.getCheckedIconClass(PrinterState.is_metric(),'icon-ok-circle','icon-ban-circle','fa-question'),style: {color:PrinterState.getColor(PrinterState.is_metric(),'greenyellow','red','red')}"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="span2 octolapse-container">
                            <div class="margin-small">
                                <div>
                                    <div>In</div>
                                    <div class="ol-text-status-1">
                                        Position
                                    </div>
                                    <span class="fa-stack fa-2x" data-bind="attr: {title: PrinterState.getis_in_printerStateText}">
                                        <span class="fa fa-square fa-stack-2x"></span>
                                        <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PrinterState.getCheckedIconClass(PrinterState.is_in_position() || PrinterState.in_path_position(), 'icon-ok-circle', 'icon-ban-circle','icon-ban-circle'),style: {color:PrinterState.getColor(PrinterState.is_in_position() || PrinterState.in_path_position(),'greenyellow','orange','orange')}"></span>
                                    </span>
                                </div>

                            </div>
                        </div>
                        <div class="span2 octolapse-container">
                            <div class="margin-small">
                                <div>
                                    <div>Layer</div>
                                    <div class="ol-text-status-1">
                                        Change
                                    </div>
                                    <span class="fa-stack fa-2x" data-bind="attr: {title: PrinterState.getis_layer_changeStateText}">
                                        <span class="fa fa-square fa-stack-2x"></span>
                                        <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PrinterState.getCheckedIconClass(PrinterState.is_layer_change(),'icon-ok-circle','icon-circle-blank','icon-circle-blank')"></span>
                                    </span>

                                </div>
                            </div>
                        </div>
                        <div class="span2 octolapse-container">
                            <div class="margin-small">
                                <div>ZHop</div>
                                <div class="ol-text-status-1">
                                    &nbsp;
                                </div>
                                <span class="fa-stack fa-2x" data-bind="attr: {title: PrinterState.getIsZHopStateText}">
                                    <span class="fa fa-square fa-stack-2x"></span>
                                    <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PrinterState.getCheckedIconClass(PrinterState.is_zhop(),'icon-ok-circle','icon-circle-blank','icon-circle-blank')"></span>
                                </span>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-footer ol-info-footer">
            <div class="row-fluid">
                <div class="span8">
                    Gcode:&nbsp;<span data-bind="text : PrinterState.gcode"></span>
                </div>
            </div>
        </div>
    </div>
</script>
