<!--
##################################################################################
# Octolapse - A plugin for OctoPrint used for making stabilized timelapse videos.
# Copyright (C) 2017  Brad Hochgesang
##################################################################################
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see the following:
# https://github.com/FormerLurker/Octolapse/blob/master/LICENSE
#
# You can contact the author either through the git-hub repository, or at the
# following email address: FormerLurker@protonmail.com
##################################################################################
-->
<script type="text/html" id="position-state-status-template">
  <div class="panel panel-default">
    <div class="panel-heading ol-heading">
      <div class="row-fluid">
        <span class="span6">
          <h4>
            Position State
          </h4>
        </span>
        <span class="span3">
          Layer: <span data-bind="text:PositionState.Layer()"/>
        </span>
        <span class="span3">
          Height: <span data-bind="text:PositionState.Height()"/><i>&nbsp;mm</i>
        </span>
      </div>
    </div>
    <div class="panel-body text-center">
      <div class="row-fluid">
        <div class="span6 octolapse-container">
          <div class="margin-small">
            <div class="row-fluid">
              <div class="span4">
                <div>X Homed</div>
                <span class="fa-stack fa-2x" data-bind="attr: {title: PositionState.getXHomedStateText}">
                  <span class="fa fa-square fa-stack-2x"></span>
                  <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PositionState.getCheckedIconClass(PositionState.XHomed())"></span>
                </span>
              </div>
              <div class="span4">
                <div>Y Homed</div>
                <span class="fa-stack fa-2x" data-bind="attr: {title: PositionState.getYHomedStateText}">
                  <span class="fa fa-square fa-stack-2x"></span>
                  <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PositionState.getCheckedIconClass(PositionState.YHomed())"></span>
                </span>
              </div>
              <div class="span4">
                <div>Z Homed</div>
                <span class="fa-stack fa-2x" data-bind="attr: {title: PositionState.getZHomedStateText}">
                  <span class="fa fa-square fa-stack-2x"></span>
                  <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PositionState.getCheckedIconClass(PositionState.ZHomed())"></span>
                </span>
              </div>
            </div>
          </div>
        </div>
        <div class="span2 octolapse-container">
          <div class="margin-small">
            <div>ZHop</div>
            <span class="fa-stack fa-2x" data-bind="attr: {title: PositionState.getIsZHopStateText}">
              <span class="fa fa-square fa-stack-2x"></span>
              <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PositionState.getCheckedIconClass(PositionState.IsZHop())"></span>
            </span>
          </div>
        </div>
        <div class="span2 octolapse-container">
          <div class="margin-small ">
            <div>Errors</div>
            <span class="fa-stack fa-2x" data-bind="attr: {title: PositionState.getHasPositionErrorStateText}">
              <span class="fa fa-square fa-stack-2x"></span>
              <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PositionState.getCheckedIconClass(PositionState.HasPositionError()), style: {color:PositionState.getPossitionErrorColor} "></span>
            </span>
          </div>
        </div>
      </div>
      <div class="row-fluid">
        <div class="span12">
          <div class="row-fluid">
            <div class="span2 octolapse-container">
              <div class="margin-small">
                <div>Extruder</div>
                <span class="fa-stack fa-2x" data-bind="attr: {title: PositionState.getIsExtruderRelativeStateText}">
                  <span class="fa fa-square fa-stack-2x"></span>
                  <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PositionState.getCheckedIconClass(PositionState.IsExtruderRelative())"></span>
                </span>
                <div class="ol-text-status-1">
                  Relative
                </div>
              </div>
            </div>
            <div class="span2 octolapse-container">
              <div class="margin-small">
                <div>XYZ</div>
                <span class="fa-stack fa-2x" data-bind="attr: {title: PositionState.getIsRelativeStateText}">
                  <span class="fa fa-square fa-stack-2x"></span>
                  <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PositionState.getCheckedIconClass(PositionState.IsRelative())"></span>
                </span>
                <div class="ol-text-status-1">
                  Relative
                </div>
              </div>
            </div>
            <div class="span2 octolapse-container">
              <div class="margin-small">
                <div>
                  <div>Layer</div>
                  <span class="fa-stack fa-2x" data-bind="attr: {title: PositionState.getIsLayerChangeStateText}">
                    <span class="fa fa-square fa-stack-2x"></span>
                    <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PositionState.getCheckedIconClass(PositionState.IsLayerChange())"></span>
                  </span>
                  <div class="ol-text-status-1">
                    Change
                  </div>
                </div>
              </div>
            </div>
            <div class="span2 octolapse-container">
              <div class="margin-small">
                <div>
                  <div>Metric</div>
                  <span class="fa-stack fa-2x" data-bind="attr: {title: PositionState.getIsMetricStateText}">
                    <span class="fa fa-square fa-stack-2x"></span>
                    <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PositionState.getCheckedIconClass(PositionState.IsMetric())"></span>
                  </span>
                  <div class="ol-text-status-1">
                    Units
                  </div>
                </div>
              </div>
            </div>
            <div class="span2 octolapse-container">
              <div class="margin-small">
                <div>
                  <div>In</div>
                  <span class="fa-stack fa-2x" data-bind="attr: {title: PositionState.getIsInPositionStateText}">
                    <span class="fa fa-square fa-stack-2x"></span>
                    <span class="fa fa-1x fa-stack-1x position-state-icon" data-bind="css:PositionState.getCheckedIconClass(PositionState.IsInPosition() || PositionState.InPathPosition())"></span>
                  </span>
                  <div class="ol-text-status-1">
                    Position
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="panel-footer ol-info-footer">
      <div class="row-fluid">
        <div class="span8">
          Gcode:&nbsp;<span data-bind="text : PositionState.GCode"></span>
        </div>
        <div class="span4 text-right text-error">
          <span data-bind="visible:PositionState.HasPositionError">
            Error:<span data-bind="text : PositionState.PositionError"></span>
          </span>
        </div>
      </div>
      <div>

      </div>

    </div>
  </div>
</script>
